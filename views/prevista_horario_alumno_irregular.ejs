<%- include('includes/_nav_alumno.ejs') %>
<%
  let horaPorGrp = {};
  <!-- Colores de bloques -->
  const colores = ['bg-primary-subtle', 'bg-success-subtle ','bg-warning-subtle ','bg-danger-subtle','bg-info-subtle','bg-secondary-subtle','bg-light'];
  const materiasColor = {};
  let colorIndex = 0;

  <!-- Inicializa estructura de horario -->
  const horario = { 
    Lunes: {}, Martes: {}, Miércoles: {}, Jueves: {}, Viernes: {} 
  };
  <!--  Procesa las materia de resultado para construir el horario-->
  if (typeof materias_resultado !== 'undefined' && Array.isArray(materias_resultado)) {
    materias_resultado.forEach(materia => {
      // Asignar color único por materia
      if (!materiasColor[materia.grupo_id]) {
        materiasColor[materia.grupo_id] = colores[colorIndex % colores.length];
        colorIndex++;
      }
      horaPorGrp[materia.grupo_id] = {};
      <!-- Procesa el dia de la materia -->
      let indexDia = 0;
      materia.dias.forEach(dia => {
        horaPorGrp[materia.grupo_id][dia] = [];
        const diaNombre = dia.charAt(0).toUpperCase() + dia.slice(1).toLowerCase();
        const bloqueTiempoIds = [];
        let indexBloque = 0;
        for (let i = materia.bloque_tiempo_id[indexDia][0]; i <= materia.bloque_tiempo_id[indexDia][materia.bloque_tiempo_id[indexDia].length - 1]; i++) {
          
          if (i === materia.bloque_tiempo_id[indexDia][indexBloque]) {
            bloqueTiempoIds.push(i);
            indexBloque++;
          } else {
            bloqueTiempoIds.push(null);
          }
        }

        <!-- Si el dia es valido -->
        if (horario[diaNombre]) {
          let inicioBloque = bloqueTiempoIds[0];
          let rowSpan = 0;
          for (let bloqueTiempoId of bloqueTiempoIds) {
            if (bloqueTiempoId === null || bloqueTiempoId === bloqueTiempoIds[bloqueTiempoIds.length - 1]) {
              if (rowSpan > 0) {
                if (bloqueTiempoId === null) {
                  rowSpan --;
                }
                horario[diaNombre][inicioBloque % 24 + 13] = {
                  grupo_id: materia.grupo_id,
                  rowspan: rowSpan,
                  nombre: materia.materia_nombre,
                  color: materiasColor[materia.grupo_id],
                  salon: materia.salon_numero,
                  profesor: `${materia.profesor_nombre} ${materia.profesor_primer_apellido} ${materia.profesor_segundo_apellido}`,
                  hora: `${bloque_tiempo[inicioBloque][0].slice(0, 5)} - ${bloque_tiempo[inicioBloque + rowSpan][1].slice(0, 5)}`,
                  seleccionado: materia.seleccionado
                };
                <!-- Bloques intermedios como ocupados -->
                if (materia.seleccionado === true) {
                  for (let b = inicioBloque + 1; b <= inicioBloque + rowSpan; b++) {
                    horario[diaNombre][b % 24 + 13] = 'ocupar';
                  }
                }
                rowSpan = 0;
              }
            } else {
              if (rowSpan === 0) {
                inicioBloque = bloqueTiempoId;
              }
              rowSpan ++;
            }
          }
        }
        indexDia ++;
      });
    });
  }
  
  <!-- Filas de la tabla -->
  for (let bloque = 14; bloque < 32; bloque++) {
    ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes'].forEach(dia => {
      if (horario[dia][bloque] === 'ocupar') return;
      if (horario[dia][bloque]) {
        horaPorGrp[horario[dia][bloque].grupo_id][dia].push(horario[dia][bloque].hora);
      }
    })
  }
%>
<main class="bg-grey mx-2 mx-md-4 mb-3 p-3 p-md-4 alumno-scroll " style="border-radius: 1.5rem; height: 100%; overflow-y: auto; ">
  <div class="row gx-2 gx-md-3 mt-3">
    <div class="col-12 col-lg-5 mb-3 mb-lg-0">
      <div class="px-3">
        <div class="card rounded-5 ivd-bg-red bg-gradient text-white h-100">
          <div class="card-body px-0 text-start">
            <div class="d-flex align-items-center justify-content-between">
              <p class="card-title ms-3">Clases Inscritas</p>
            </div>
            <div style="border-bottom: 3px solid #ffffff; width: 100%; margin-top: -7px;"></div>
            <p class="card-text text-start ms-4" style="margin-top: 10px; font-size: calc(1rem + 1vw);"> <%= materias_inscritas %> </p>
          </div>
        </div>
      </div>
      <div class="card rounded-5 bg-transparent border border-2 border-grey text-black h-100">
        <div class="card-body p-0 alumno-scroll" style="max-height: 200vh;">
          <div class="px-2 px-md-3 pt-2" style="overflow-x: hidden; overflow-y: auto;">
            <h5 class="card-title ms-2 ms-md-3">Materias Seleccionadas: </h5>
            
            <% for (let materia_resultado of materias_resultado) { %>
              <div class="w-100 d-flex flex-column rounded-5 mt-2" style="background-color: white;">
                <div class="p-2">
                  <div class="d-flex flex-column flex-md-row justify-content-center align-items-center mb-1">
                    <div class="d-flex m-0 align-items-center justify-content-center" style="width: 100%; padding-left: 10%;">
                        <% for (let i = 0; i < materia_resultado.dias.length; i++) { %>
                          <p class="m-0 me-2">
                            <%= Object.values(horaPorGrp[materia_resultado.grupo_id][materia_resultado.dias[i]]).join(", ") %>
                          </p>
                          <% if (i !== materia_resultado.dias.length - 1) { %>
                            <p class="m-0 me-3 ivd-text-red">
                              (<%= materia_resultado.dias[i] %>)  
                            </p>
                          <% } else { %>
                            <p class="m-0 ivd-text-red">
                              (<%= materia_resultado.dias[i] %>)  
                            </p>
                          <% } %>
                        <% } %>
                      </div>
                  </div>
                </div>
                
                <div class="ivd-bg-red w-100" style="height: 3px;"></div>
                
                <div class="p-2 p-md-3">
                  <h5 class="card-title fw-semibold d-flex justify-content-center text-md-start"><%= materia_resultado.materia_nombre %></h5>
                  <p class="card-text d-flex justify-content-center mb-1 ">
                    Salon:
                    <% if (materia_resultado.salon_numero === 9999) { %>
                      No asignado | 
                    <% } else { %>
                      <%= materia_resultado.salon_numero %> | 
                    <% } %>
                    <%= materia_resultado.profesor_nombre %> 
                    <%= materia_resultado.profesor_primer_apellido %>
                    <%= materia_resultado.profesor_segundo_apellido %>
                  </p>
                </div>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    
    <div class="col-lg-7">
      <div class="col-12 col-md-12 col-lg-6 offset-lg-3 mt-3 mt-lg-0">
        <div class="card rounded-5 bg-transparent ivd-text-red border border-2 border-grey h-100">
          <div class="card-body d-flex flex-column align-items-center justify-content-center text-center p-2 p-md-3">
            <h2 class="card-title mb-2" style="font-size: calc(1.2rem + 0.8vw);">Vista previa del horario</h2>
  
          </div>
        </div>
      </div>
      <div class="card rounded-5 bg-transparent border-grey text-black h-100">
        <div class="card-header bg-transparent border-0 p-0">
          <div class="px-3 pt-3">
            <div class="d-flex align-items-center justify-content-center overflow-hidden rounded-4 border">
              <table class="table custom-table p-0 table-striped table-bordered table-hover mb-0 rounded-4"
              style="font-size: 0.85rem; border-collapse: separate !important; border-spacing: 0; border-radius: 1rem;"">
                <thead class="table-danger rounded-top">
                  <tr class="text-center rounded-top">
                    <!-- Titulo de columnas -->
                    <th class="hour-col">Hora</th>
                    <th>Lunes</th>
                    <th>Martes</th>
                    <th>Miércoles</th>
                    <th>Jueves</th>
                    <th>Viernes</th>
                  </tr>
                </thead>
                <tbody class="horario-body">
                <%
                  for (let bloque = 14; bloque < 32; bloque++) {
                    const hora = Math.floor(bloque / 2);
                    const minutos = bloque % 2 === 0 ? '00' : '30';
                    let horaFormato;
                    if (bloque % 2 !== 0) {
                      horaFormato = `${hora}:${minutos} - ${hora + 1}:00`;
                    } else {
                      horaFormato = `${hora}:${minutos} - ${hora}:30`;
                    } 
                %>
                    <tr style="max-height: 1rem;">
                      <th class="hour-cell text-center align-middle"><%= horaFormato %></th>
                      <% ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes'].forEach(dia => { %>
                        <% if (horario[dia][bloque] === 'ocupar') return; %>
                        <% if (horario[dia][bloque]) {
                          horaPorGrp[horario[dia][bloque].grupo_id][dia].push(horario[dia][bloque].hora);
                        } %>
                        <% if (horario[dia][bloque] && horario[dia][bloque].seleccionado === true) { 
                          const clase = horario[dia][bloque];
                        %>
                          <td class="text-black text-center align-middle <%= clase.color %>" 
                              rowspan="<%= clase.rowspan + 1 %>"
                              data-bs-toggle="tooltip" 
                              data-bs-placement="top" 
                              <% if (clase.salon === 9999) { %>
                                title="<%= clase.hora %> | Salon: No asignado | Prof: <%= clase.profesor %>">
                              <% } else { %>
                                title="<%= clase.hora %> | Salon: <%= clase.salon %> | Prof: <%= clase.profesor %>">
                              <% } %>
                            <%= clase.nombre %>
                          </td>
                        <% } else { %>
                          <td class="empty-slot"></td>
                        <% } %>
                      <% }) %>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>


        <div class="card-body">
          <div class="d-flex justify-content-center"
            style="background-color: #f0f0f0; border-bottom-left-radius: 1.5rem; border-bottom-right-radius: 1.5rem;">
            <button type="button" class="btn btn-secondary rounded-pill px-4 mx-4"
              onclick="window.location.href='/alumno-irregular/modificar-horario';"
              style="background-color: white; border: 1px solid #84251C; color: #84251C;">Modificar
            </button>
            <button type="button" id="btnConfirmarHorario" class="btn btn-danger rounded-pill px-4 mx-4"
              style="background-color: #84251C; border: none;" data-bs-toggle="modal" data-bs-target="#confirmHorarioModal">
              Confirmar
            </button>
          </div>
        </div>
        </div>
        </div>
        </div>
        </main>

    <!-- Modal de Confirmación de Horario -->
    <div class="modal fade" id="confirmHorarioModal" tabindex="-1" aria-labelledby="confirmHorarioModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-5" style="background-color: #f0f0f0; max-width: 95vw;">
          <!-- Encabezado del modal -->
          <div class="modal-header justify-content-center rounded-5 border-0" style="background-color: #f0f0f0">
            <h5 class="modal-title" id="confirmHorarioModalLabel" style="color: #84251C;"><b>Confirmación de Horario</b>
            </h5>
          </div>
          <!-- Cuerpo del modal -->
          <div class="modal-body px-5 py-0">
            <div class="rounded-5 p-4" style="background-color: white;">
              <p class="modal-title text-center" style="color: #84251C; font-size: 1.1rem;">
                Estás a punto de <strong>confirmar</strong> tu horario.
                Una vez confirmado <strong>no podrás modificarlo</strong>.
                ¿Deseas <strong>confirmar</strong> tu horario definitivamente?
              </p>
            </div>
          </div>
          <!-- Pie del modal -->
          <div class="modal-footer justify-content-center border-0">
            <button type="button" class="btn btn-secondary rounded-pill px-4 mx-2"
              style="background-color: white; border: 1px solid #84251C; color: #84251C;" data-bs-dismiss="modal">
              Cancelar
            </button>
            <button type="button" id="btnConfirmarModal" class="btn btn-danger rounded-pill px-4 mx-2"
              style="background-color: #84251C; border: none;">
              Confirmar
            </button>
          </div>
        </div>
      </div>
    </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {

      const btnConfirmarModal = document.getElementById('btnConfirmarModal');
      
      btnConfirmarModal.addEventListener('click', async function() {
        const btn = this;
        const originalText = btn.innerHTML;
        
        try {
          //Feedback Visual
          btn.disabled = true;
          btn.innerHTML = `
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Confirmando...
          `;
  
          // Cerrar el modla
          const modal = bootstrap.Modal.getInstance(document.getElementById('confirmHorarioModal'));
          modal.hide();
  
          const response = await fetch('/alumno-irregular/confirmar-horario', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          });
  
          const result = await response.json();
          
          if (!response.ok || !result.success) {
            throw new Error(result.message || 'Error en la confirmación');
          }
  
          // Si funciona hace redirect
          window.location.href = result.redirectUrl;
          
        } catch (error) {
          btn.disabled = false;
          btn.innerHTML = originalText;
          
          // Mostrar el error 
          const errorAlert = document.createElement('div');
          errorAlert.className = 'alert alert-danger alert-dismissible fade show';
          errorAlert.innerHTML = `
            <strong>Error!</strong> ${error.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          `;
          

          document.querySelector('.card-body').prepend(errorAlert);
          
          console.error('Confirmación fallida:', error);
        }
      });
    });
  </script>
  
</body>  
</html>